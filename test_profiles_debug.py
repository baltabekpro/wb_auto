#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from core.profiles import list_profiles, load_profile

def test_profiles():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ü–†–û–§–ò–õ–ï–ô")
    print("=" * 50)
    
    # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    current_dir = os.path.dirname(__file__)
    print(f"üìÇ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    
    # –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—è–º –∫–∞–∫ –≤ –∫–æ–¥–µ
    profiles_path = os.path.join(current_dir, 'src', '..', 'profiles')
    print(f"üìÅ –ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—è–º (–∫–∞–∫ –≤ –∫–æ–¥–µ): {profiles_path}")
    
    # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
    abs_profiles_path = os.path.abspath(profiles_path)
    print(f"üìç –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å: {abs_profiles_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
    if os.path.exists(abs_profiles_path):
        print("‚úÖ –ü–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
        files = os.listdir(abs_profiles_path)
        print(f"üìÑ –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ: {files}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏
        try:
            profile_files = list_profiles(abs_profiles_path)
            print(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {len(profile_files)}")
            
            for name, path in profile_files.items():
                print(f"  ‚Ä¢ {name}: {path}")
                
                # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
                try:
                    profile = load_profile(path)
                    print(f"    ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: {profile.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                except Exception as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª–µ–π: {e}")
            import traceback
            traceback.print_exc()
    else:
        print("‚ùå –ü–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ò—â–µ–º –ø–∞–ø–∫—É –ø—Ä–æ—Ñ–∏–ª–µ–π –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
        search_paths = [
            os.path.join(current_dir, 'profiles'),
            os.path.join(current_dir, 'src', 'profiles'),
            'profiles'
        ]
        
        print("\nüîç –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ profiles –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö:")
        for path in search_paths:
            abs_path = os.path.abspath(path)
            if os.path.exists(abs_path):
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–∞: {abs_path}")
                files = os.listdir(abs_path)
                print(f"    üìÑ –§–∞–π–ª—ã: {files}")
            else:
                print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞: {abs_path}")

if __name__ == "__main__":
    test_profiles()
