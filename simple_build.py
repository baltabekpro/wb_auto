#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def simple_build():
    """–ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞"""
    
    print("üîß –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ WB Auto")
    print("=" * 40)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é
    version_file = Path("version.txt")
    if version_file.exists():
        current_version = version_file.read_text().strip()
        version_parts = current_version.split('.')
        version_parts[-1] = str(int(version_parts[-1]) + 1)
        new_version = '.'.join(version_parts)
    else:
        new_version = "1.1.0"
    
    version_file.write_text(new_version, encoding='utf-8')
    print(f"üìà –í–µ—Ä—Å–∏—è: {new_version}")
    
    # –ö–æ–º–∞–Ω–¥–∞ —Å–±–æ—Ä–∫–∏
    cmd = [
        sys.executable, "-m", "PyInstaller",
        "--onefile",
        "--noconsole", 
        "--name", f"WB_Auto_v{new_version}",
        "--add-data", "version.txt;.",
        "--add-data", "profiles;profiles",
        "--hidden-import", "PyQt5",
        "--hidden-import", "requests", 
        "--hidden-import", "keyring",
        "--hidden-import", "yadisk",
        "--hidden-import", "openpyxl",
        "--hidden-import", "tenacity",
        "--hidden-import", "Pillow",
        "src/app.py"
    ]
    
    print("üî® –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏...")
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
            exe_path = Path("dist") / f"WB_Auto_v{new_version}.exe"
            if exe_path.exists():
                print(f"üì¶ –§–∞–π–ª: {exe_path}")
                print(f"üìä –†–∞–∑–º–µ—Ä: {exe_path.stat().st_size / 1024 / 1024:.1f} MB")
                return True
            else:
                print("‚ùå –§–∞–π–ª exe –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:")
            print(result.stderr[-1000:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –æ—à–∏–±–∫–∏
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    success = simple_build()
    
    if success:
        print("\nüéâ –ì–û–¢–û–í–û!")
        print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–±—Ä–∞–Ω–∞.")
        print("\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print("‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ PathExistsError")
        print("‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
        print("‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    else:
        print("\n‚ùå –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
