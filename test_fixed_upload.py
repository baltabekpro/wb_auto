#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
"""

import os
import sys
import tempfile
from PIL import Image
import keyring
from src.core.yadisk_client import upload_sku_photos

def create_test_photo(filename, size=(300, 300), color=(255, 0, 0)):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    img = Image.new('RGB', size, color)
    img.save(filename, 'JPEG')
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ: {filename}")

def test_fixed_upload():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ final_setup.py
    final_setup_path = "final_setup.py"
    token = None
    
    if os.path.exists(final_setup_path):
        with open(final_setup_path, 'r', encoding='utf-8') as f:
            content = f.read()
            if 'YANDEX_TOKEN' in content:
                start = content.find('YANDEX_TOKEN = "') + len('YANDEX_TOKEN = "')
                end = content.find('"', start)
                token = content[start:end]
    
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print(f"üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω: {token[:20]}...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Ñ–æ—Ç–æ
    temp_dir = tempfile.mkdtemp(prefix="wb_test_")
    print(f"üìÅ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: {temp_dir}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–æ—Ç–æ
        test_files = [
            os.path.join(temp_dir, "—Ç–µ—Å—Ç-–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.1.jpg"),
            os.path.join(temp_dir, "—Ç–µ—Å—Ç-–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.2.jpg")
        ]
        
        for i, filepath in enumerate(test_files):
            color = (255, 0, 0) if i == 0 else (0, 255, 0)  # –ö—Ä–∞—Å–Ω–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ —Ñ–æ—Ç–æ
            create_test_photo(filepath, color=color)
        
        print("\nüöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        results = upload_sku_photos(
            keyring=keyring,
            token=token,
            root_path="/WB/Kruzhki",
            sku="—Ç–µ—Å—Ç-–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π",
            files=test_files,
            overwrite_mode="–í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å"
        )
        
        print(f"\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–ª—É—á–µ–Ω–æ {len(results)} —Å—Å—ã–ª–æ–∫:")
        for i, result in enumerate(results, 1):
            print(f"  {i}. {result.name}")
            print(f"     –ü—É–±–ª–∏—á–Ω–∞—è: {result.public_url}")
            print(f"     –ü—Ä—è–º–∞—è: {result.direct_url[:60]}...")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            for filepath in test_files:
                if os.path.exists(filepath):
                    os.remove(filepath)
            os.rmdir(temp_dir)
            print(f"üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")
        except Exception:
            pass

if __name__ == "__main__":
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏\n")
    
    success = test_fixed_upload()
    
    if success:
        print("\nüéâ –¢–ï–°–¢ –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û!")
        print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ")
        print("–¢—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
